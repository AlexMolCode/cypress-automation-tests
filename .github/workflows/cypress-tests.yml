name: Run Cypress Tests

on:
  push:
    branches:
      - main
  pull_request:  # Runs on all PRs

# Needed to push to gh-pages
permissions:
  contents: write  

jobs:
  cypress-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox] # Enable cross browser testing for Github Actions
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Clean Reports Folder
        run: rm -rf cypress/reports || true 

      - name: Run UI Tests in ${{ matrix.browser }}
        # Get record key from Github secrets for Cypress Cloud runs - disabled for now
        #env: 
        #  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        run: npx cypress run \
              --browser ${{ matrix.browser }} \
              --headless --spec "cypress/e2e/ui/*.cy.js" \
              --record \
              --group "UI Tests - ${{ matrix.browser }}"             

      - name: List mochawesome outputs (debug)
        run: ls -lahR cypress/reports || true

      - name: Upload mochawesome JSON (${{ matrix.browser }})
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-ui-${{ matrix.browser }} # Filename for the report
          path: cypress/reports/**/*.json
          if-no-files-found: error

  cypress-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Clean Reports Folder
        run: rm -rf cypress/reports || true

      - name: Run API Tests 
        # Get API auth login from Github secrets
        env:
          CYPRESS_BOOKING_USERNAME: ${{ secrets.CYPRESS_BOOKING_USERNAME }} 
          CYPRESS_BOOKING_PASSWORD: ${{ secrets.CYPRESS_BOOKING_PASSWORD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }} 
        run: npx cypress run \
              --headless \
              --spec "cypress/e2e/api/*.cy.js" \
              --record \
              --group "API Tests"

      - name: List mochawesome outputs (debug)
        run: ls -lahR cypress/reports || true

      - name: Upload mochawesome JSON (api)
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-api
          path: cypress/reports/**/*.json
          if-no-files-found: error
  
  # Build the HTML report to be displayed
  build-report:
    needs: [cypress-ui, cypress-api]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install report tools
        run: npm ci

      - name: Download all JSON artifacts
        uses: actions/download-artifact@v4
        with:
          path: mochawesome-raw

      - name: List downloaded artifacts (debug)
        run: |
          echo "Artifacts tree:"
          ls -lahR mochawesome-raw || true
          echo "Any JSON?"
          find mochawesome-raw -type f -name '*.json' -maxdepth 5 -print || true

      # Merge ALL JSONs from UI (both browsers) and API into one
      - name: Merge mochawesome JSON
        run: |
          FILES=$(find mochawesome-raw -type f -name '*.json' -maxdepth 5)
          if [ -z "$FILES" ]; then
          echo "No mochawesome JSON files found under mochawesome-raw/"
          exit 1
          fi
          npx mochawesome-merge "mochawesome-raw/**/**/*.json" > /tmp/merged.json

      - name: Generate combined HTML report
        run: |
          mkdir -p public
          npx marge /tmp/merged.json \
            --reportDir public \
            --reportFilename index.html \
            --inline \
            --reportTitle "Cypress UI + API (All Browsers)"

      - name: Upload combined HTML report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: public

  # Publish to GitHub Pages ONLY on push to main
  deploy:
    needs: build-report
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: mochawesome-report
          path: public
     
      # The JamesIves public repo enables publishing reports to GitHub Pages
      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4 
        with:
          branch: gh-pages
          folder: public